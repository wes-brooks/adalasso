{
    "contents" : "#' Fit a generalized linear model via the adaptive lasso\n#' \n#' @param formula a symbolic description of the model to be fitted\n#' @param data a data frame containing the variables in the model.\n#' @param family a description of the response distribution and link function for the model.\n#' @param weights \n#' \n#' @export\nadalasso <-\nfunction(formula, data, family, weights, s=NULL, verbose=FALSE, adapt=TRUE, selection.method='AICc', selectonly=FALSE) {\n    #Create the object that will hold the output\n    result = list()\n    class(result) = \"adalasso\"\n    result[['formula']] = as.formula(formula, env=data)\n    result[['selectonly']] = selectonly\n    \n    #Drop any rows with NA values\n    data = data\n    na.rows = (which(is.na(data))-1) %% dim(data)[1] + 1\n    if (length(na.rows)>0)\n        data = data[-na.rows,]\n    result[['data']] = data\n\n    #Pull out the relevant data\n    response.name = rownames(attr(terms(formula, data=data), 'factors'))[1]\n    predictor.names = attr(terms(formula, data=data), 'term.labels')\n    response.col = which(colnames(data)==response.name)\n    \n    result[['response']] = response.name\n    result[['predictors']] = predictor.names\n    \n    f = as.formula(paste(paste(response.name, \"~\", sep=''), paste(predictor.names, collapse='+'), sep=''))\n    if (adapt) {\n        result[['adapt']] = adaptive.weights(formula=f, data=data, family=family, weights=weights, verbose=verbose)\n    } else {\n        result[['adapt']] = NULL\n    }\n    \n    #Get the adaptive lasso estimate\n    y = as.matrix(data[,response.col])\n    x = as.matrix(data[,-response.col])\n    result[['lasso']] = adalasso_step(formula=f, data=data, family=family, weights=weights, s=s, verbose=verbose, adaptive.object=result[['adapt']], adapt=adapt, selection.method=selection.method)\n    result[['lambda']] = result[['lasso']][['lambda']]\n    \n    if (selectonly) {\n        variables = paste(result[['lasso']][['vars']], collapse=\"+\")\n        f = as.formula(paste(result[['response']], \"~\", variables, sep=\"\"))\n        m = glm(formula=f, data=data, family=family, weights=weights)\n        result[['glm']] = m\n        result[['fitted.values']] = m$fitted\n        result[['actual']] = as.vector(data[,response.name])\n        result[['residuals']] = result[['actual']] - result[['fitted.values']]\n    } else {    \n        result[['fitted.values']] = predict(result, newx=data)\n        result[['actual']] = as.vector(data[,response.name])\n        result[['residuals']] = result[['actual']] - result[['fitted.values']]\n    }\n        \n    return(result)\n}\n",
    "created" : 1406741223151.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2640331332",
    "id" : "358E2163",
    "lastKnownWriteTime" : 1406741619,
    "path" : "C:/Users/wrbrooks/git/adalasso/R/adalasso.R",
    "project_path" : "R/adalasso.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}